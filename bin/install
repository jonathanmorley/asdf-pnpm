#!/usr/bin/env bash

set -Eeuo pipefail

if [[ "${ASDF_INSTALL_TYPE:-version}" == 'ref' ]]; then
  echo >&2 "â›” This plugin does not support installing by ref."
  exit 1
fi

FALLBACK_REGISTRY='https://registry.npmjs.org/'

REGISTRY="${NPM_CONFIG_REGISTRY:-$FALLBACK_REGISTRY/}"
if command -v npm 1>/dev/null; then
  REGISTRY=$(npm config get registry)
fi

mkdir -p "${ASDF_INSTALL_PATH}"

download_and_extract() {
  local reg="$1"
  local tarball_url="${reg%/}/pnpm/-/pnpm-${ASDF_INSTALL_VERSION}.tgz"
  
  echo "Downloading pnpm v${ASDF_INSTALL_VERSION} from ${tarball_url}"
  curl --silent --fail --location "${tarball_url}" |
    tar xzf - --strip-components=1 --no-same-owner -C "${ASDF_INSTALL_PATH}"
}

# Try with configured registry first, fall back to default if it's different and the first attempt fails
if ! download_and_extract "$REGISTRY" 2>/dev/null; then
  # Remove trailing slashes for comparison
  if [ "${REGISTRY%/}" != "${FALLBACK_REGISTRY%/}" ]; then
    echo "Download from configured registry failed, trying fallback registry..."
    download_and_extract "$FALLBACK_REGISTRY"
  else
    echo "Download from registry failed."
    exit 1
  fi
fi

# v1 doesn't have a bin/dir (its binaries are in lib/bin)
mkdir -p "${ASDF_INSTALL_PATH}/bin"

BINARIES=('pnpm' 'pnpx')
for bin in "${BINARIES[@]}"; do
  BINARY_PATHS=(
    "${ASDF_INSTALL_PATH}/bin/${bin}.cjs"    #v6
    "${ASDF_INSTALL_PATH}/bin/${bin}.js"     #v2 - v5
    "${ASDF_INSTALL_PATH}/lib/bin/${bin}.js" #v1
  )

  for BINARY_PATH in "${BINARY_PATHS[@]}"; do
    if [[ -f "${BINARY_PATH}" ]]; then
      BIN_PATH="${BINARY_PATH}"
      break
    fi
  done

  # v1 to v2 binaries are not executable
  chmod +x "${BIN_PATH}"

  ln -sf "${BIN_PATH}" "${ASDF_INSTALL_PATH}/bin/${bin}"
done
